#+TITLE: Docker
#+EMAIL: @pvavilin
#+AUTHOR: @pvavilin
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:https://orgmode.org/org-info.js
#+startup: beamer
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [smallest]
#+LATEX_HEADER: \usetheme{default}
#+LATEX_HEADER: \usecolortheme{crane}
#+LATEX_HEADER: \RequirePackage{fancyvrb}
#+LATEX_HEADER: \DefineVerbatimEnvironment{verbatim}{Verbatim}{fontsize=\scriptsize}
#+LaTeX_HEADER: \lstset{basicstyle=\scriptsize\ttfamily}
#+LATEX_HEADER: \usepackage{xlop}
#+LATEX_HEADER: \usepackage{booktabs}
#+OPTIONS: \n:t ^:nil num:nil ltoc:nil buttons:nil
* chroot
  Запустим Python в chroot
  #+BEGIN_SRC shell :exports both :results output vector
    echo -e "$(ldd /usr/bin/python3 | \
         egrep -o '/lib.*\.[0-9]')"
  #+END_SRC

  #+RESULTS:
  : /lib/x86_64-linux-gnu/libc.so.6
  : /lib/x86_64-linux-gnu/libpthread.so.0
  : /lib/x86_64-linux-gnu/libdl.so.2
  : /lib/x86_64-linux-gnu/libutil.so.1
  : /lib/x86_64-linux-gnu/libm.so.6
  : /lib/x86_64-linux-gnu/libexpat.so.1
  : /lib/x86_64-linux-gnu/libz.so.1
  : /lib64/ld-linux-x86-64.so.2
* chroot
  #+BEGIN_SRC shell :exports code :tangle copy_to_chroot.sh
    copy_to_chroot () {
      local name="${1}"
      mkdir -p $(dirname "chroot${name}")
      for i in $(ldd ${name} | \
          grep -o '/lib.*\.[0-9]'); do
        echo "chroot${i}"
        mkdir -p $(dirname "chroot${i}")
        /bin/cp $i "chroot${i}";
      done
      mkdir -p chroot/bin
      /bin/cp ${name} chroot/bin/
    }
  #+END_SRC
* virtual machine
  [[file:vbox.sh]]
  #+BEGIN_SRC shell :exports none :tangle vbox.sh
    VBoxManage createvm --name Debian \
               -ostype "Debian_64" --register
    VBoxManage modifyvm Debian --ioapic on
    VBoxManage modifyvm Debian --memory 1024 --vram 128
    VBoxManage modifyvm Debian --nic1 nat
    VBoxManage createhd --filename Debian/Debian_DISK.vdi\
               --size 40000 --format VDI
    VBoxManage storagectl Debian \
               --name "SATA Controller" \
               --add sata --controller IntelAhci
    VBoxManage storageattach Debian \
               --storagectl "SATA Controller"\
               --port 0 --device 0 --type hdd \
               --medium Debian/Debian_DISK.vdi
    VBoxManage storagectl Debian --name "IDE Controller"\
               --add ide --controller PIIX4
    VBoxManage storageattach Debian\
               --storagectl "IDE Controller"\
               --port 1 --device 0 --type dvddrive\
               --medium ~/Downloads/debian.iso
    VBoxManage modifyvm Debian --boot1 dvd --boot2 disk\
               --boot3 none --boot4 none
    VBoxManage modifyvm Debian --vrde on
    VBoxManage modifyvm Debian --vrdemulticon on --vrdeport 10001
    VBoxHeadless --startvm Debian
  #+END_SRC
* vagrant
  #+BEGIN_SRC shell :exports code
    mkdir vagrant_project
    cd vagrant_project
    vagrant init generic/ubuntu2004
    vagrant up
  #+END_SRC
* Linux Namespaces
  __[[https://github.com/imankulov/trytry][TryTry]]__
* Docker
  [[file:docker.jpg]]
* Слои
  [[file:layers.png]]
* Где всё на самом деле хранится?
  #+BEGIN_EXAMPLE
  /var/lib/docker
  #+END_EXAMPLE

  #+BEGIN_SRC shell :exports both :results output list
    docker system df
  #+END_SRC

  #+RESULTS:
  : - TYPE            TOTAL     ACTIVE    SIZE      RECLAIMABLE
  : - Images          0         0         0B        0B
  : - Containers      0         0         0B        0B
  : - Local Volumes   0         0         0B        0B
  : - Build Cache     0         0         0B        0B

* Как попасть на запущенный контейнер?
  Если вы не настроили доступ по SSH на контейнер, то всегда можно туда зайти таким способом
  #+BEGIN_SRC shell :exports code
    docker exec -it <node> /bin/bash
  #+END_SRC

* Собрать свой образ с нуля?
  __[[https://docs.docker.com/develop/develop-images/baseimages/][baseimage]]__

* Запустить контейнер с графической системой?
  __[[https://www.cloudsavvyit.com/10520/how-to-run-gui-applications-in-a-docker-container/][Можно]]__

* Запустить контейнер в контейнере?
  - в Linux точно __[[https://jpetazzo.github.io/2015/09/03/do-not-use-docker-in-docker-for-ci/][можно]]__
  - лучше так не делать (могут возникнуть технические сложности)
  - это может быть нужно когда у тебя CI система сама запускает сборку в контейнере, а в процессе сборки может создавать контейнер. тогда надо просто __[[https://itnext.io/docker-in-docker-521958d34efd?gi=a966915566a0][пробрасывать docker daemon из хоста]]__

* Дополнительная литература
  - __[[https://habr.com/ru/company/selectel/blog/279281/][namespaces]]__
  - __[[https://habr.com/ru/company/selectel/blog/303190/][cgroups]]__
  - __[[https://habr.com/ru/company/redhatrussia/blog/352052/][Linux контейнеры]]__
  - __[[https://habr.com/ru/post/272145/][Образы и контейнеры Docker в картинках]]__

* Вопросы-ответы
  #+ATTR_LATEX: :width .6\textwidth
  [[file:questions.jpg]]
